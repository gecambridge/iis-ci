@{
    ViewBag.Title = "IISCI";
}

<div atom-dock="Fill" style="overflow:auto">
    <script type="text/javascript">
        ({
            search: ''
        })
    </script>
    <table class="site-table"
           atom-type="AtomItemsControl"
         atom-items="{AtomPromise.json('/iis/sites')}"
           atom-filter="[ $scope.search ? function(item){ return item.Bindings.join(',').indexOf($scope.search) != -1; } : null ]"
           >
        <thead>
            <tr>
                <th>Site</th>
                <th>Bindings</th>
                <th class="last-build">Last Build</th>
                <th class="build-time">Build Time</th>
                <th class="config">Config</th>
                @*<th class="files">Files</th>*@
                @*<th class="build">Build</th>
                <th class="build">Reset &amp; Build</th>*@
            </tr>
            <tr>
                <th></th>
                <th>
                    <input type="search" placeholder="Search Host" atom-value="$[scope.search](change,keyup,keydown)"/>
                </th>
                <th></th>
                <th></th>
                <th></th>
                @*<th></th>
                <th></th>
                <th></th>*@

            </tr>
        </thead>
        <tbody atom-presenter="itemsPresenter">
            <tr atom-template="itemTemplate">
                <td><a 
                       atom-href="{ Atom.url('/home/site' , { id: $data.Id}) }"
                       atom-target="{$data.id}"
                       atom-text="{$data.Name}"></a></td>
                <td atom-text="{($data.Bindings).join(', ')}"></td>
                <td class="button" atom-class="{ { error: $data.LastBuild.Error, success: !$data.LastBuild.ExitCode && $data.LastBuild.Time } }">
                    <span 
                          class="success-span">Success</span>
                    <button 
                            class="failed-button"
                            atom-event-click="{ {appScope: { build:$data, 'frameView.url':'error' }} }"                            
                            >Failed</button>
                </td>
                <td class="button" atom-text="{ $data.LastBuild.Time ? AtomDate.toDateTimeString($data.LastBuild.Time) : 'n/a' }"></td>
                <td class="button">
                    <a 
                       atom-href="{ Atom.url('/home/site' , { id: $data.Id}) }"
                       atom-target="{$data.id}">
                        <button>Open</button>
                    </a>
                </td>
                @*<td class="button">
                    <a atom-href="{ '#view=files&site=' + $data.Id }">
                        <button>Files</button>
                    </a>
                </td>
                <td class="button">
                    <a atom-href="{Atom.url('/iis/build',{ id: $data.Id })}"
                       target="_blank"><button>Build Now</button></a>
                </td>
                <td class="button">
                    <a atom-href="{Atom.url('/iis/build',{ id: $data.Id, reset:true })}"
                       target="_blank"><button>Reset &amp; Build</button></a>
                </td>*@
            </tr>
        </tbody>
    </table>
    
</div>

<div atom-template-name="error"
     atom-data="{$appScope.build}"
     style="overflow:auto">
    <div>
        <button atom-event-click="{$appScope.frameView.backCommand}">Back</button>
        <span atom-text="{$data.Name}"></span>
    </div>
    <pre atom-text="{$data.LastBuild.Log}"></pre>
    <pre style-color="red"
         atom-text="{$data.LastBuild.Error}"></pre>
</div>


@*<section atom-template-name="files" 
     atom-type="AtomDockPanel"
     >
    <div atom-dock="Left"
         style="overflow:auto;width:200px;">
        <div atom-type="AtomListBox"
             atom-name="folderList"
             atom-allow-select-first="true"
             atom-value-path="Path"
             atom-value="$[appScope.folder]"
             atom-items="{AtomPromise.json('/files/folders/' + $appScope.site)}">
            <div style-margin-left="{ ($data.Depth*20) + 'px'}"
                 atom-template="itemTemplate">
                <span atom-text="{$data.Name}"></span>
            </div>
        </div>
    </div>
    <section atom-type="AtomItemsControl"
             atom-items="[ $appScope.folderList.value ? AtomPromise.json('/files/files/' + $appScope.site + '/' + $appScope.folderList.value ) : [ $appScope._v ] ]">
        <table>
            <thead>
                <tr>
                    <th>File</th>
                    <th>Size</th>
                    <th></th>
                </tr>
            </thead>
            <tbody atom-presenter="itemsPresenter">
                <tr atom-template="itemTemplate">
                    <td atom-text="{$data.Name}"
                        style="cursor:pointer"
                        atom-event-click="{ $data.IsDirectory ? { appScope: {folder: $appScope.folder + '/' + $data.Name} } : {} }"></td>
                    <td atom-text="{$data.Size}"></td>
                    <td><button atom-type="AtomDeleteButton"
                            atom-post-url="{'/files/delete/' + $appScope.site + $appScope.folderList.value + '/' + $data.Name }"
                            atom-next="{$appScope.refreshCommand}">
                        Delete
                    </button></td>
                </tr>
            </tbody>
        </table>
    </section>
</section>*@
